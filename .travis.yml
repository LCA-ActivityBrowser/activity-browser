# Using https://github.com/Anaconda-Platform/anaconda-project/blob/master/.travis.yml as example
language: python

matrix:
  include:
    - python: "3.6"
      os: linux
      env: PYENV=3.6 VERSION=2.5.0.dev PKG_NAME=activity-browser-dev
    - python: "3.7"
      os: linux
      env: PYENV=3.7 VERSION=2.5.0.dev PKG_NAME=activity-browser-dev
    - python: "3.6"
      language: generic
      os: osx
      env: PYENV=3.6 VERSION=2.5.0.dev PKG_NAME=activity-browser-dev
    - python: "3.7"
      language: generic
      os: osx
      env: PYENV=3.7 VERSION=2.5.0.dev PKG_NAME=activity-browser-dev

install:
  # As suggested by https://github.com/conda/conda/issues/9337#issuecomment-542466141
  - wget https://repo.anaconda.com/pkgs/misc/conda-execs/conda-latest-$TRAVIS_OS_NAME-64.exe -O conda.exe
  - chmod +x conda.exe
  - export CONDA_ALWAYS_YES=1
  - ./conda.exe create -p $HOME/miniconda -c conda-forge python=$PYENV conda conda-build pytest pytest-qt pytest-mock pytest-cov python-coveralls "coverage<5.0"
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  # Useful for debugging any issues with conda
  - conda info -a

  # Build source into local package for testing
  - conda build ./ci/travis/recipe --no-test
  - conda install -q -c conda-forge -c cmutel -c file://$HOME/miniconda/conda-bld/ -c haasad -c pascallesage activity-browser-dev==$VERSION;

before_script:
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then
      export DISPLAY=:99.0;
      /sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -screen 0 1920x1200x24 -ac +extension GLX +render -noreset;
      sleep 2;
    fi

script:
  # Run tests on the installed package, also do code coverage in linux.
  - py.test -v --cov=activity_browser;

after_success:
  # Only upload the code coverage from linux py37 machine
  - if [ "$TRAVIS_OS_NAME" == "linux" -a "$PYENV" == "3.7" ]; then coveralls; fi

# https://docs.travis-ci.com/user/deployment/script/
# https://docs.travis-ci.com/user/deployment/#pull-requests
# Move deploy code from 'after_success' to 'deploy'
deploy:
  - provider: script
    skip_cleanup: true
    script: bash ci/conda_upload.sh;
    on:
      branch: master
  - provider: script
    skip_cleanup: true
    script: bash ci/conda_upload.sh;
    on:
      all_branches: true
      tags: true

# Shouldn't need to have a lot of commit-history within the test
git:
  depth: 3

notifications:
  email:
    on_success: always # default: change
    on_failure: always # default: always
