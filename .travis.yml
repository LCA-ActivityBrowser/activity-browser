# Using https://github.com/Anaconda-Platform/anaconda-project/blob/master/.travis.yml as example
language: python

matrix:
  include:
    - python: "3.6"
      os: linux
      env: VERSION=2.3.2.dev PKG_NAME=activity-browser-dev
    - python: "3.7"
      language: generic-covered
      os: osx
      env: pyver=3.7 VERSION=2.3.2.dev PKG_NAME=activity-browser-dev

before_install:
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then
      sudo apt-get update;
    fi

install:
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then MINICONDA_OS=Linux; else MINICONDA_OS=MacOSX; fi
  - echo "Running on $MINICONDA_OS"
  - wget https://repo.continuum.io/miniconda/Miniconda3-latest-$MINICONDA_OS-x86_64.sh -O miniconda.sh;
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  - conda install -q conda-build
  # Useful for debugging any issues with conda
  - conda info -a

  # Add conda channels
  - conda config --append channels conda-forge
  - conda config --append channels cmutel
  - conda config --append channels haasad

  # Build source into local package for testing
  - conda build ./ci/travis/recipe

  # Create a test environment because travis trips over itself otherwise
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then
      conda create -q -n test-environment python=$pyver pytest;
    else
      conda create -q -n test-environment python=$TRAVIS_PYTHON_VERSION;
    fi
  - source activate test-environment
  - conda install -q --use-local activity-browser-dev
  - conda install -q "pytest<3.5" pytest-qt pytest-mock
  # Include coverage packages for linux distro
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then
      conda install -q "pytest-cov<2.6" python-coveralls;
    fi

before_script:
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then
      export DISPLAY=:99.0;
      /sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -screen 0 1920x1200x24 -ac +extension GLX +render -noreset;
      sleep 2;
    fi

script:
  # Run tests on the installed package, also do code coverage in linux.
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then
      py.test;
      python -m pytest --cov=activity_browser;
    else
      py.test;
    fi

after_success:
  # Only upload the code coverage if tests were successful
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then coveralls; fi

# https://docs.travis-ci.com/user/deployment/script/
# https://docs.travis-ci.com/user/deployment/#pull-requests
# Move deploy code from 'after_success' to 'deploy'
deploy:
  - provider: script
    skip_cleanup: true
    script: bash ci/conda_upload.sh;
    on:
      branch: master
  - provider: script
    skip_cleanup: true
    script: bash ci/conda_upload.sh;
    on:
      all_branches: true
      tags: true

# Shouldn't need to have a lot of commit-history within the test
git:
  depth: 3

notifications:
  email:
    on_success: always # default: change
    on_failure: always # default: always
