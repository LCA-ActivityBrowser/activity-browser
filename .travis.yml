language: python

matrix:
  include:
    - python: "3.6"
      os: linux
    - python: "3.7"
      os: osx
      env: pyver=3.7 pydist=macpython

before_install:
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then
      sudo apt-get update;
    fi

install:
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then MINICONDA_OS=Linux; else MINICONDA_OS=MacOSX; fi
  - echo "Running on $MINICONDA_OS"
  - wget https://repo.continuum.io/miniconda/Miniconda3-latest-$MINICONDA_OS-x86_64.sh -O miniconda.sh;
  - bash miniconda.sh -b -p $HOME/miniconda
  - source "$HOME"/miniconda/etc/profile.d/conda.sh
  - hash -r
  - conda config --set always_yes yes --set changeps1 no --set auto_update_conda false
  - conda update -q conda
  - conda install -q conda-build
  # Useful for debugging any issues with conda
  - conda info -a

  # conda channels
  - conda config --append channels conda-forge
  - conda config --append channels cmutel
  - conda config --append channels haasad

  # Build and install source code as 'activity-browser-dev' then install test suite
  - conda build ./ci/travis/recipe
  - conda install -q --use-local activity-browser-dev
  - conda install -q "pytest<3.5" pytest-qt pytest-mock
  # Include coverage packages for linux distro
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then
      conda install -q "pytest-cov<2.6" python-coveralls;
    fi

before_script:
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then
      export DISPLAY=:99.0;
      /sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -screen 0 1920x1200x24 -ac +extension GLX +render -noreset;
      sleep 2;
    fi

script:
  # Run tests on the installed package, also do code coverage in linux.
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then
      py.test --cov=activity_browser;
    else
      py.test;
    fi

after_success:
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then
      coveralls;
      if [ "$TRAVIS_BRANCH" = "master" -a "$TRAVIS_PULL_REQUEST" = "false" ]; then
        conda install -q anaconda-client conda-verify;
        bash ci/conda_upload.sh;
        echo "Uploaded dev-build to conda channel";
      else
        echo "No upload because not master branch";
      fi
    else
      echo "No upload from osx";
    fi

# # https://docs.travis-ci.com/user/deployment/script/
# # Replace 'after_success' with 'deploy'    
# deploy:
#   # For building stable builds, requires that a commit is tagged (using 'x.y.z' format)
#   - provider: script
#     script:  ci/conda_upload.sh;
#     on:
#       branch: master
#       condition: $TRAVIS_TAG =~ ^[0-9]+\.[0-9]+\.[0-9]+
#   # For building dev builds, requires that a build is untagged
#   - provider: script
#     script: ci/conda_upload.sh;
#     on:
#       branch: master
  
# Shouldn't need to have a lot of commit-history within the test
git:
  depth: 3

notifications:
  email:
    on_success: always # default: change
    on_failure: always # default: always

